# Multi-stage Dockerfile for TimeSeries service

FROM golang:1.21-alpine AS redis-timeseries-service

# Set working directory
WORKDIR /app

# Install dependencies
RUN apk add --no-cache git wget

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY redis_timeseries_service.go .

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o redis-timeseries-service redis_timeseries_service.go

# Runtime stage
FROM alpine:latest

# Install ca-certificates and wget for health checks
RUN apk --no-cache add ca-certificates wget

# Set working directory
WORKDIR /root/

# Copy binary from builder stage
COPY --from=redis-timeseries-service /app/redis-timeseries-service .

# Expose port
EXPOSE 8082

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8082/health || exit 1

# Run the binary
CMD ["./redis-timeseries-service"]
